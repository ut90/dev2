<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - 図書館管理システム</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <link rel="stylesheet" href="/css/style.css">
</head>
<body>
    <%- include('../partials/staff_header') %>
    
    <div class="container mt-4">
        <h1 class="mb-4">蔵書管理</h1>
        
        <div class="card mb-4">
            <div class="card-header">
                <h2 class="card-title h5 mb-0">蔵書検索</h2>
            </div>
            <div class="card-body">
                <form id="searchForm">
                    <div class="row g-3">
                        <div class="col-md-3">
                            <label for="isbnSearch" class="form-label">ISBN</label>
                            <input type="text" class="form-control" id="isbnSearch" name="isbn">
                        </div>
                        <div class="col-md-3">
                            <label for="titleSearch" class="form-label">タイトル</label>
                            <input type="text" class="form-control" id="titleSearch" name="title">
                        </div>
                        <div class="col-md-3">
                            <label for="authorSearch" class="form-label">著者</label>
                            <input type="text" class="form-control" id="authorSearch" name="author">
                        </div>
                        <div class="col-md-3">
                            <label for="categorySearch" class="form-label">カテゴリ</label>
                            <select class="form-select" id="categorySearch" name="category">
                                <option value="">すべて</option>
                                <!-- カテゴリはJSで動的に追加 -->
                            </select>
                        </div>
                    </div>
                    <div class="mt-3 text-end">
                        <button type="button" class="btn btn-secondary me-2" id="resetBtn">リセット</button>
                        <button type="submit" class="btn btn-primary">検索</button>
                    </div>
                </form>
            </div>
        </div>
        
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h2 class="h4 mb-0">蔵書一覧</h2>
            <a href="/staff/books/register" class="btn btn-success">
                <i class="bi bi-plus-circle me-1"></i>新規登録
            </a>
        </div>
        
        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>ISBN</th>
                                <th>タイトル</th>
                                <th>著者</th>
                                <th>カテゴリ</th>
                                <th>状態</th>
                                <th>操作</th>
                            </tr>
                        </thead>
                        <tbody id="booksTableBody">
                            <!-- 蔵書データはJSで動的に追加 -->
                        </tbody>
                    </table>
                </div>
                
                <div id="pagination" class="d-flex justify-content-between align-items-center mt-3">
                    <div>
                        <span id="pageInfo">0件中 0-0件を表示</span>
                    </div>
                    <nav aria-label="Page navigation">
                        <ul class="pagination mb-0">
                            <!-- ページネーションはJSで動的に追加 -->
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
    
    <!-- 蔵書詳細モーダル -->
    <div class="modal fade" id="bookDetailModal" tabindex="-1" aria-labelledby="bookDetailModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="bookDetailModalLabel">蔵書詳細</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="bookForm">
                        <input type="hidden" id="bookId">
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="isbn" class="form-label">ISBN</label>
                                <input type="text" class="form-control" id="isbn" name="isbn" required>
                                <div class="invalid-feedback">ISBNを入力してください</div>
                            </div>
                            <div class="col-md-6">
                                <label for="status" class="form-label">状態</label>
                                <select class="form-select" id="status" name="status" required>
                                    <option value="利用可能">利用可能</option>
                                    <option value="貸出中">貸出中</option>
                                    <option value="予約中">予約中</option>
                                    <option value="整理中">整理中</option>
                                    <option value="廃棄">廃棄</option>
                                </select>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="title" class="form-label">タイトル</label>
                            <input type="text" class="form-control" id="title" name="title" required>
                            <div class="invalid-feedback">タイトルを入力してください</div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="author" class="form-label">著者</label>
                                <input type="text" class="form-control" id="author" name="author" required>
                                <div class="invalid-feedback">著者を入力してください</div>
                            </div>
                            <div class="col-md-6">
                                <label for="publisher" class="form-label">出版社</label>
                                <input type="text" class="form-control" id="publisher" name="publisher">
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="publishDate" class="form-label">出版日</label>
                                <input type="date" class="form-control" id="publishDate" name="publishDate">
                            </div>
                            <div class="col-md-6">
                                <label for="category" class="form-label">カテゴリ</label>
                                <select class="form-select" id="category" name="category" required>
                                    <option value="">選択してください</option>
                                    <option value="文学">文学</option>
                                    <option value="歴史">歴史</option>
                                    <option value="科学">科学</option>
                                    <option value="技術">技術</option>
                                    <option value="芸術">芸術</option>
                                    <option value="社会科学">社会科学</option>
                                    <option value="自然科学">自然科学</option>
                                    <option value="哲学">哲学</option>
                                    <option value="言語">言語</option>
                                    <option value="児童書">児童書</option>
                                    <option value="その他">その他</option>
                                </select>
                                <div class="invalid-feedback">カテゴリを選択してください</div>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="location" class="form-label">配架場所</label>
                            <input type="text" class="form-control" id="location" name="location">
                        </div>
                        <div class="mb-3">
                            <label for="description" class="form-label">説明</label>
                            <textarea class="form-control" id="description" name="description" rows="3"></textarea>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">閉じる</button>
                    <button type="button" class="btn btn-danger me-auto" id="deleteBookBtn">削除</button>
                    <button type="button" class="btn btn-primary" id="saveBookBtn">保存</button>
                </div>
            </div>
        </div>
    </div>
    
    <!-- 削除確認モーダル -->
    <div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteConfirmModalLabel">削除の確認</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>この蔵書を削除してもよろしいですか？</p>
                    <p class="text-danger">この操作は取り消せません。</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">キャンセル</button>
                    <button type="button" class="btn btn-danger" id="confirmDeleteBtn">削除</button>
                </div>
            </div>
        </div>
    </div>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // トークンの取得
            const token = localStorage.getItem('token');
            if (!token) {
                window.location.href = '/staff/login';
                return;
            }
            
            // 変数の初期化
            let currentPage = 1;
            let currentBookId = null;
            
            // モーダルの初期化
            const bookDetailModal = new bootstrap.Modal(document.getElementById('bookDetailModal'));
            const deleteConfirmModal = new bootstrap.Modal(document.getElementById('deleteConfirmModal'));
            
            // カテゴリの取得
            fetchCategories();
            
            // 蔵書一覧の取得
            fetchBooks();
            
            // 検索フォームの送信イベント
            document.getElementById('searchForm').addEventListener('submit', function(e) {
                e.preventDefault();
                currentPage = 1;
                fetchBooks();
            });
            
            // リセットボタンのクリックイベント
            document.getElementById('resetBtn').addEventListener('click', function() {
                document.getElementById('searchForm').reset();
                currentPage = 1;
                fetchBooks();
            });
            
            // 保存ボタンのクリックイベント
            document.getElementById('saveBookBtn').addEventListener('click', function() {
                saveBook();
            });
            
            // 削除ボタンのクリックイベント
            document.getElementById('deleteBookBtn').addEventListener('click', function() {
                deleteConfirmModal.show();
            });
            
            // 削除確認ボタンのクリックイベント
            document.getElementById('confirmDeleteBtn').addEventListener('click', function() {
                deleteBook();
            });
            
            // カテゴリの取得
            function fetchCategories() {
                fetch('/api/categories', {
                    headers: {
                        'Authorization': `Bearer ${token}`
                    }
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('カテゴリの取得に失敗しました');
                    }
                    return response.json();
                })
                .then(categories => {
                    const categorySearch = document.getElementById('categorySearch');
                    const categorySelect = document.getElementById('category');
                    
                    // 検索用セレクトボックスにカテゴリを追加
                    categories.forEach(category => {
                        const option = document.createElement('option');
                        option.value = category;
                        option.textContent = category;
                        categorySearch.appendChild(option);
                    });
                })
                .catch(error => {
                    console.error('カテゴリ取得エラー:', error);
                    alert('カテゴリの取得に失敗しました');
                });
            }
            
            // 蔵書一覧の取得
            function fetchBooks() {
                const formData = new FormData(document.getElementById('searchForm'));
                const params = new URLSearchParams();
                
                for (const [key, value] of formData.entries()) {
                    if (value) {
                        params.append(key, value);
                    }
                }
                
                params.append('page', currentPage);
                
                fetch(`/api/books?${params.toString()}`, {
                    headers: {
                        'Authorization': `Bearer ${token}`
                    }
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('蔵書一覧の取得に失敗しました');
                    }
                    return response.json();
                })
                .then(data => {
                    renderBooks(data.books);
                    renderPagination(data.pagination);
                })
                .catch(error => {
                    console.error('蔵書一覧取得エラー:', error);
                    alert('蔵書一覧の取得に失敗しました');
                });
            }
            
            // 蔵書一覧の表示
            function renderBooks(books) {
                const tbody = document.getElementById('booksTableBody');
                tbody.innerHTML = '';
                
                if (books.length === 0) {
                    const row = document.createElement('tr');
                    row.innerHTML = '<td colspan="7" class="text-center">蔵書が見つかりません</td>';
                    tbody.appendChild(row);
                    return;
                }
                
                books.forEach(book => {
                    const row = document.createElement('tr');
                    
                    row.innerHTML = `
                        <td>${book.book_id}</td>
                        <td>${book.isbn}</td>
                        <td>${book.title}</td>
                        <td>${book.author}</td>
                        <td>${book.category}</td>
                        <td>
                            <span class="badge ${getStatusBadgeClass(book.status)}">
                                ${book.status}
                            </span>
                        </td>
                        <td>
                            <button type="button" class="btn btn-sm btn-outline-primary me-1" onclick="editBook(${book.book_id})">
                                <i class="bi bi-pencil"></i>
                            </button>
                            <button type="button" class="btn btn-sm btn-outline-danger" onclick="deleteBookConfirm(${book.book_id})">
                                <i class="bi bi-trash"></i>
                            </button>
                        </td>
                    `;
                    
                    tbody.appendChild(row);
                });
            }
            
            // ページネーションの表示
            function renderPagination(pagination) {
                const pageInfo = document.getElementById('pageInfo');
                const paginationElement = document.querySelector('#pagination .pagination');
                
                // 表示情報の更新
                const start = (pagination.currentPage - 1) * 10 + 1;
                const end = Math.min(pagination.currentPage * 10, pagination.totalCount);
                pageInfo.textContent = `${pagination.totalCount}件中 ${start}-${end}件を表示`;
                
                // ページネーションの更新
                paginationElement.innerHTML = '';
                
                // 前へボタン
                const prevItem = document.createElement('li');
                prevItem.className = `page-item ${pagination.currentPage === 1 ? 'disabled' : ''}`;
                prevItem.innerHTML = `<a class="page-link" href="#" data-page="${pagination.currentPage - 1}">前へ</a>`;
                paginationElement.appendChild(prevItem);
                
                // ページ番号
                for (let i = 1; i <= pagination.totalPages; i++) {
                    if (
                        i === 1 ||
                        i === pagination.totalPages ||
                        (i >= pagination.currentPage - 2 && i <= pagination.currentPage + 2)
                    ) {
                        const pageItem = document.createElement('li');
                        pageItem.className = `page-item ${i === pagination.currentPage ? 'active' : ''}`;
                        pageItem.innerHTML = `<a class="page-link" href="#" data-page="${i}">${i}</a>`;
                        paginationElement.appendChild(pageItem);
                    } else if (
                        i === pagination.currentPage - 3 ||
                        i === pagination.currentPage + 3
                    ) {
                        const ellipsisItem = document.createElement('li');
                        ellipsisItem.className = 'page-item disabled';
                        ellipsisItem.innerHTML = '<span class="page-link">...</span>';
                        paginationElement.appendChild(ellipsisItem);
                    }
                }
                
                // 次へボタン
                const nextItem = document.createElement('li');
                nextItem.className = `page-item ${pagination.currentPage === pagination.totalPages ? 'disabled' : ''}`;
                nextItem.innerHTML = `<a class="page-link" href="#" data-page="${pagination.currentPage + 1}">次へ</a>`;
                paginationElement.appendChild(nextItem);
                
                // ページネーションのクリックイベント
                paginationElement.querySelectorAll('.page-link').forEach(link => {
                    link.addEventListener('click', function(e) {
                        e.preventDefault();
                        const page = parseInt(this.dataset.page);
                        if (page && page !== currentPage) {
                            currentPage = page;
                            fetchBooks();
                        }
                    });
                });
            }
            
            // 蔵書の編集
            window.editBook = function(bookId) {
                currentBookId = bookId;
                
                fetch(`/api/books/${bookId}`, {
                    headers: {
                        'Authorization': `Bearer ${token}`
                    }
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('蔵書情報の取得に失敗しました');
                    }
                    return response.json();
                })
                .then(book => {
                    document.getElementById('bookId').value = book.book_id;
                    document.getElementById('isbn').value = book.isbn;
                    document.getElementById('title').value = book.title;
                    document.getElementById('author').value = book.author;
                    document.getElementById('publisher').value = book.publisher || '';
                    document.getElementById('publishDate').value = book.publish_date ? book.publish_date.split('T')[0] : '';
                    document.getElementById('category').value = book.category;
                    document.getElementById('description').value = book.description || '';
                    document.getElementById('location').value = book.location || '';
                    document.getElementById('status').value = book.status;
                    
                    bookDetailModal.show();
                })
                .catch(error => {
                    console.error('蔵書情報取得エラー:', error);
                    alert('蔵書情報の取得に失敗しました');
                });
            };
            
            // 蔵書の削除確認
            window.deleteBookConfirm = function(bookId) {
                currentBookId = bookId;
                deleteConfirmModal.show();
            };
            
            // 蔵書の保存
            function saveBook() {
                const form = document.getElementById('bookForm');
                
                // バリデーション
                if (!form.checkValidity()) {
                    form.classList.add('was-validated');
                    return;
                }
                
                const bookData = {
                    isbn: document.getElementById('isbn').value,
                    title: document.getElementById('title').value,
                    author: document.getElementById('author').value,
                    publisher: document.getElementById('publisher').value,
                    publishDate: document.getElementById('publishDate').value,
                    category: document.getElementById('category').value,
                    description: document.getElementById('description').value,
                    location: document.getElementById('location').value,
                    status: document.getElementById('status').value
                };
                
                const url = currentBookId ? `/api/books/${currentBookId}` : '/api/books';
                const method = currentBookId ? 'PUT' : 'POST';
                
                fetch(url, {
                    method: method,
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${token}`
                    },
                    body: JSON.stringify(bookData)
                })
                .then(response => {
                    if (!response.ok) {
                        return response.json().then(data => {
                            throw new Error(data.message || '蔵書の保存に失敗しました');
                        });
                    }
                    return response.json();
                })
                .then(data => {
                    alert(data.message);
                    bookDetailModal.hide();
                    fetchBooks();
                })
                .catch(error => {
                    console.error('蔵書保存エラー:', error);
                    alert(error.message);
                });
            }
            
            // 蔵書の削除
            function deleteBook() {
                if (!currentBookId) return;
                
                fetch(`/api/books/${currentBookId}`, {
                    method: 'DELETE',
                    headers: {
                        'Authorization': `Bearer ${token}`
                    }
                })
                .then(response => {
                    if (!response.ok) {
                        return response.json().then(data => {
                            throw new Error(data.message || '蔵書の削除に失敗しました');
                        });
                    }
                    return response.json();
                })
                .then(data => {
                    alert(data.message);
                    deleteConfirmModal.hide();
                    bookDetailModal.hide();
                    fetchBooks();
                })
                .catch(error => {
                    console.error('蔵書削除エラー:', error);
                    alert(error.message);
                });
            }
            
            // 状態に応じたバッジクラスの取得
            function getStatusBadgeClass(status) {
                switch (status) {
                    case '利用可能':
                        return 'bg-success';
                    case '貸出中':
                        return 'bg-warning text-dark';
                    case '予約中':
                        return 'bg-info text-dark';
                    case '整理中':
                        return 'bg-secondary';
                    case '廃棄':
                        return 'bg-danger';
                    default:
                        return 'bg-secondary';
                }
            }
        });
    </script>
</body>
</html>
